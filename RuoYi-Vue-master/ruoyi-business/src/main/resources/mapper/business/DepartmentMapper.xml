<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.DepartmentMapper">
    <resultMap type="com.ruoyi.business.domain.entity.DepartmentDO" id="DepartmentResult">
        <result property="id" column="id"/>
        <result property="deptId" column="dept_id"/>
        <result property="departmentName" column="department_name"/>
        <result property="deleteFlag" column="delete_flag"/>
        <result property="createdById" column="created_by_id"/>
        <result property="createdByName" column="created_by_name"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedById" column="updated_by_id"/>
        <result property="updatedByName" column="updated_by_name"/>
        <result property="updatedTime" column="updated_time"/>
    </resultMap>

    <resultMap type="com.ruoyi.business.domain.model.DepartmentDetailVO" id="DepartmentDetailResult"
               extends="DepartmentResult">
        <result property="deptName" column="dept_name"/>
    </resultMap>

    <sql id="selectDepartmentVO">
        select id,
               dept_id,
               department_name,
               delete_flag,
               created_by_id,
               created_by_name,
               created_time,
               updated_by_id,
               updated_by_name,
               updated_time
        from department as d
    </sql>


    <select id="selectDepartmentList" parameterType="com.ruoyi.business.domain.model.Department"
            resultMap="DepartmentResult">
        <include refid="selectDepartmentVO"/>
        <where>
            and delete_flag=0
            <if test="deptId != null ">
                and dept_id = #{deptId}
            </if>
            <if test="departmentName != null  and departmentName != ''">
                and department_name = #{departmentName}
            </if>
            <if test="searchName != null  and searchName != ''">
                and department_name like concat('%', #{searchName}, '%')
            </if>
            <if test="deleteFlag != null ">
                and delete_flag = #{deleteFlag}
            </if>
            <if test="createdById != null ">
                and created_by_id = #{createdById}
            </if>
            <if test="createdByName != null  and createdByName != ''">
                and created_by_name like concat('%', #{createdByName}, '%')
            </if>
            <if test="createdTime != null ">
                and created_time = #{createdTime}
            </if>
            <if test="updatedById != null ">
                and updated_by_id = #{updatedById}
            </if>
            <if test="updatedByName != null  and updatedByName != ''">
                and updated_by_name like concat('%', #{updatedByName}, '%')
            </if>
            <if test="updatedTime != null ">
                and updated_time = #{updatedTime}
            </if>
        </where>
    </select>

    <select id="selectDepartmentDetailList" parameterType="com.ruoyi.business.domain.model.Department"
            resultMap="DepartmentDetailResult">
        select d.id,
        d.dept_id,
        d.department_name,
        d.delete_flag,
        d.created_by_id,
        d.created_by_name,
        d.created_time,
        d.updated_by_id,
        d.updated_by_name,
        d.updated_time,
        sd.dept_name
        from department as d
        inner join sys_dept sd on d.dept_id = sd.dept_id and sd.del_flag = '0'
        <where>
           and d.delete_flag = 0
            <if test="deptId != null ">
                and d.dept_id = #{deptId}
            </if>
            <if test="departmentName != null  and departmentName != ''">
                and d.department_name = #{departmentName}
            </if>
            <if test="searchName != null  and searchName != ''">
                and d.department_name like concat('%', #{searchName}, '%')
            </if>
            <if test="deleteFlag != null ">
                and d.delete_flag = #{deleteFlag}
            </if>
            <if test="createdById != null ">
                and d.created_by_id = #{createdById}
            </if>
            <if test="createdByName != null  and createdByName != ''">
                and d.created_by_name like concat('%', #{createdByName}, '%')
            </if>
            <if test="createdTime != null ">
                and d.created_time = #{createdTime}
            </if>
            <if test="updatedById != null ">
                and d.updated_by_id = #{updatedById}
            </if>
            <if test="updatedByName != null  and updatedByName != ''">
                and d.updated_by_name like concat('%', #{updatedByName}, '%')
            </if>
            <if test="updatedTime != null ">
                and d.updated_time = #{updatedTime}
            </if>
        </where>
    </select>

    <select id="selectDepartmentById" parameterType="Long"
            resultMap="DepartmentResult">
        <include refid="selectDepartmentVO"/>
        where id = #{id}
        and delete_flag=0
    </select>
    <select id="selectDepartmentByIds"
            resultMap="DepartmentResult">
        <include refid="selectDepartmentVO"/>
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and delete_flag=0
    </select>

    <insert id="insertDepartment" parameterType="com.ruoyi.business.domain.entity.DepartmentDO" useGeneratedKeys="true"
            keyProperty="id">
        insert into department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="departmentName != null">
                department_name,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="createdById != null">
                created_by_id,
            </if>
            <if test="createdByName != null">
                created_by_name,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="updatedById != null">
                updated_by_id,
            </if>
            <if test="updatedByName != null">
                updated_by_name,
            </if>
            <if test="updatedTime != null">
                updated_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deptId != null">
                #{deptId},
            </if>
            <if test="departmentName != null">
                #{departmentName},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag},
            </if>
            <if test="createdById != null">
                #{createdById},
            </if>
            <if test="createdByName != null">
                #{createdByName},
            </if>
            <if test="createdTime != null">
                #{createdTime},
            </if>
            <if test="updatedById != null">
                #{updatedById},
            </if>
            <if test="updatedByName != null">
                #{updatedByName},
            </if>
            <if test="updatedTime != null">
                #{updatedTime},
            </if>
        </trim>
    </insert>

    <update id="updateDepartment" parameterType="com.ruoyi.business.domain.entity.DepartmentDO">
        update department
        <trim prefix="SET" suffixOverrides=",">
            <if test="deptId != null">
                dept_id =
                #{deptId},
            </if>
            <if test="departmentName != null">
                department_name =
                #{departmentName},
            </if>
            <if test="deleteFlag != null">
                delete_flag =
                #{deleteFlag},
            </if>
            <if test="createdById != null">
                created_by_id =
                #{createdById},
            </if>
            <if test="createdByName != null">
                created_by_name =
                #{createdByName},
            </if>
            <if test="createdTime != null">
                created_time =
                #{createdTime},
            </if>
            <if test="updatedById != null">
                updated_by_id =
                #{updatedById},
            </if>
            <if test="updatedByName != null">
                updated_by_name =
                #{updatedByName},
            </if>
            <if test="updatedTime != null">
                updated_time =
                #{updatedTime},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDepartmentById" parameterType="Long">
        delete
        from department
        where id = #{id}
    </delete>

    <delete id="deleteDepartmentByIds" parameterType="String">
        delete from department where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>